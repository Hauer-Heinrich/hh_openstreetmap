{"version":3,"sources":["leaflet.logic.js"],"names":["window","addEventListener","openStreetMaps","document","getElementsByClassName","index","length","scrollWheelZoom","element","mapID","getAttribute","jsonMap","text","obj","JSON","parse","fitMarkerPositions","markers","zoom","position","lat","long","osmMap","L","map","center","zoomControl","tileLayer","attribution","addTo","i","marker","parser","DOMParser","dom","parseFromString","body","textContent","icon","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","m","bindPopup","unescape","openOnStart","openPopup","fitmarkers","push","fitBounds"],"mappings":"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","sourcesContent":["(function() {\n    window.addEventListener(\"load\", function() {\n        var openStreetMaps = document.getElementsByClassName(\"openstreetmap\");\n\n        for (var index = 0; index < openStreetMaps.length; index++) {\n            var element = openStreetMaps[index],\n                mapID = element.getAttribute(\"id\"),\n                jsonMap = element.getElementsByClassName(\"jsonMap\")[0].text,\n                obj = JSON.parse(jsonMap),\n                fitMarkerPositions = new Array(),\n                markers = obj.markers;\n\n            var zoom = obj.zoom,\n                scrollWheelZoom,\n                position = [\n                    obj.lat,\n                    obj.long\n                ];\n\n            if(obj.scrollWheelZoom === \"0\" || obj.scrollWheelZoom === false || obj.scrollWheelZoom === 'false') {\n                scrollWheelZoom = false;\n            } else {\n                scrollWheelZoom = true;\n            }\n\n            var osmMap = L.map(mapID, {\n                center: position,\n                zoom: zoom,\n                zoomControl: true,\n                scrollWheelZoom: scrollWheelZoom\n            });\n\n\n\n            // Kartendesign von MapBox (erfordert eigentlich einen API-Key, der hier verwendete API-Key funktioniert auch, ist aber von Leaflet)\n            /* L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n            maxZoom: 18,\n            attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n            '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n            'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n            id: 'mapbox.streets'\n            }).addTo(osmMap); */\n\n            // Kartendesign von OpenStreetMap\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(osmMap);\n\n            // PopUp anzeigen lassen - Icon als PNG:\n            // https://leafletjs.com/reference-1.3.2.html#icon oder Icon als DIV:\n            // https://leafletjs.com/reference-1.3.2.html#icon-default\n\n            for(var i = 0; i < markers.length; i++) {\n                var marker = markers[i];\n                var parser = new DOMParser;\n                var dom = parser.parseFromString(\n                    '<!doctype html><body>' + marker.text,\n                    'text/html'\n                );\n                var text = dom.body.textContent;\n                var icon = L.icon({\n                    iconUrl: marker.icon,\n                    // shadowUrl: 'leaf-shadow.png',\n\n                    iconSize:     [40, 40], // size of the icon\n                    shadowSize:   [50, 50], // size of the shadow\n                    iconAnchor:   [22, 22], // point of the icon which will correspond to marker's location\n                    shadowAnchor: [4, 62],  // the same for the shadow\n                    popupAnchor:  [-3, -10] // point from which the popup should open relative to the iconAnchor\n                });\n                var m = L.marker([marker.lat, marker.long], {icon: icon})\n                    .addTo(osmMap)\n                    .bindPopup(unescape(text));\n                if(marker.openOnStart == true) {\n                    m.openPopup();\n                }\n                if(obj.fitmarkers === \"1\") {\n                    fitMarkerPositions.push([marker.lat, marker.long]);\n                }\n            }\n\n            if(obj.fitmarkers === \"1\") {\n                osmMap.fitBounds(fitMarkerPositions);\n            }\n        }\n    });\n})();\n"],"file":"../leaflet.logic.min.js"}