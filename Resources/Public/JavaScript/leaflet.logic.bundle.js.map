{
  "version": 3,
  "sources": ["leaflet.logic.js"],
  "sourcesContent": ["window.hhOsmArray = {};\n(function() {\n    window.addEventListener(\"load\", function() {\n        const openStreetMaps = document.querySelectorAll(\".hh-openstreetmap\");\n\n        if(openStreetMaps) {\n            openStreetMaps.forEach(map => {\n                const mapID = map.dataset.id,\n                    jsonMap = document.querySelector(\"#osm-config-\"+mapID).text,\n                    obj = JSON.parse(jsonMap),\n                    fitMarkerPositions = new Array(),\n                    markers = obj.markers,\n                    zoom = obj.zoom;\n\n                let scrollWheelZoom = false,\n                    position = [];\n\n                // set center map position\n                if(obj.lat && obj.long) {\n                    position[0] = obj.lat;\n                    position[1] = obj.long;\n                } else if(markers.length > 0) {\n                    position[0] = markers[0].lat;\n                    position[1] = markers[0].long;\n                }\n\n                if(obj.scrollWheelZoom === \"0\" || obj.scrollWheelZoom === false || obj.scrollWheelZoom === 'false') {\n                    scrollWheelZoom = false;\n                } else {\n                    scrollWheelZoom = true;\n                }\n\n                const osmMap = L.map(\"map-\"+mapID, {\n                    center: position,\n                    zoom: zoom,\n                    zoomControl: true,\n                    scrollWheelZoom: scrollWheelZoom\n                });\n\n                // Kartendesign von MapBox (erfordert eigentlich einen API-Key, der hier verwendete API-Key funktioniert auch, ist aber von Leaflet)\n                /* L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n                maxZoom: 18,\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n                '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n                'Imagery \u00A9 <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n                id: 'mapbox.streets'\n                }).addTo(osmMap); */\n\n                // Kartendesign von OpenStreetMap\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                }).addTo(osmMap);\n\n                // PopUp anzeigen lassen - Icon als PNG:\n                // https://leafletjs.com/reference-1.3.2.html#icon oder Icon als DIV:\n                // https://leafletjs.com/reference-1.3.2.html#icon-default\n\n                for(var i = 0; i < markers.length; i++) {\n                    const marker = markers[i],\n                            parser = new DOMParser,\n                            dom = parser.parseFromString(\n                                '<!doctype html><body>' + marker.text,\n                                'text/html'\n                            ),\n                            text = dom.body.textContent;\n\n                    const icon = L.icon({\n                        iconUrl: marker.icon,\n                        // shadowUrl: 'leaf-shadow.png',\n\n                        iconSize:     [40, 40], // size of the icon\n                        shadowSize:   [50, 50], // size of the shadow\n                        iconAnchor:   [22, 22], // point of the icon which will correspond to marker's location\n                        shadowAnchor: [4, 62],  // the same for the shadow\n                        popupAnchor:  [-3, -10] // point from which the popup should open relative to the iconAnchor\n                    });\n\n                    const m = L.marker([marker.lat, marker.long], {icon: icon})\n                        .addTo(osmMap)\n                        .bindPopup(text);\n\n                    if(marker.openOnStart == true) {\n                        m.openPopup();\n                    }\n                    if(obj.fitmarkers === \"1\") {\n                        fitMarkerPositions.push([marker.lat, marker.long]);\n                    }\n                }\n\n                if(obj.fitmarkers === \"1\") {\n                    osmMap.fitBounds(fitMarkerPositions);\n                }\n\n                window.hhOsmArray[mapID] = osmMap;\n            });\n        }\n    });\n})();\n"],
  "mappings": "MAAA,OAAO,WAAa,CAAC,GACpB,UAAW,CACR,OAAO,iBAAiB,OAAQ,UAAW,CACvC,IAAMA,EAAiB,SAAS,iBAAiB,mBAAmB,EAEjEA,GACCA,EAAe,QAAQC,GAAO,CAC1B,IAAMC,EAAQD,EAAI,QAAQ,GACtBE,EAAU,SAAS,cAAc,eAAeD,CAAK,EAAE,KACvDE,EAAM,KAAK,MAAMD,CAAO,EACxBE,EAAqB,IAAI,MACzBC,EAAUF,EAAI,QACdG,EAAOH,EAAI,KAEXI,EAAkB,GAClBC,EAAW,CAAC,EAGbL,EAAI,KAAOA,EAAI,MACdK,EAAS,CAAC,EAAIL,EAAI,IAClBK,EAAS,CAAC,EAAIL,EAAI,MACZE,EAAQ,OAAS,IACvBG,EAAS,CAAC,EAAIH,EAAQ,CAAC,EAAE,IACzBG,EAAS,CAAC,EAAIH,EAAQ,CAAC,EAAE,MAG1BF,EAAI,kBAAoB,KAAOA,EAAI,kBAAoB,IAASA,EAAI,kBAAoB,QACvFI,EAAkB,GAElBA,EAAkB,GAGtB,IAAME,EAAS,EAAE,IAAI,OAAOR,EAAO,CAC/B,OAAQO,EACR,KAAMF,EACN,YAAa,GACb,gBAAiBC,CACrB,CAAC,EAYD,EAAE,UAAU,qDAAsD,CAC9D,YAAa,yFACjB,CAAC,EAAE,MAAME,CAAM,EAMf,QAAQC,EAAI,EAAGA,EAAIL,EAAQ,OAAQK,IAAK,CACpC,IAAMC,EAASN,EAAQK,CAAC,EAChBE,EAAS,IAAI,UACbC,EAAMD,EAAO,gBACT,wBAA0BD,EAAO,KACjC,WACJ,EACAG,EAAOD,EAAI,KAAK,YAElBE,EAAO,EAAE,KAAK,CAChB,QAASJ,EAAO,KAGhB,SAAc,CAAC,GAAI,EAAE,EACrB,WAAc,CAAC,GAAI,EAAE,EACrB,WAAc,CAAC,GAAI,EAAE,EACrB,aAAc,CAAC,EAAG,EAAE,EACpB,YAAc,CAAC,GAAI,GAAG,CAC1B,CAAC,EAEKK,EAAI,EAAE,OAAO,CAACL,EAAO,IAAKA,EAAO,IAAI,EAAG,CAAC,KAAMI,CAAI,CAAC,EACrD,MAAMN,CAAM,EACZ,UAAUK,CAAI,EAEhBH,EAAO,aAAe,IACrBK,EAAE,UAAU,EAEbb,EAAI,aAAe,KAClBC,EAAmB,KAAK,CAACO,EAAO,IAAKA,EAAO,IAAI,CAAC,CAEzD,CAEGR,EAAI,aAAe,KAClBM,EAAO,UAAUL,CAAkB,EAGvC,OAAO,WAAWH,CAAK,EAAIQ,CAC/B,CAAC,CAET,CAAC,CACL,GAAG",
  "names": ["openStreetMaps", "map", "mapID", "jsonMap", "obj", "fitMarkerPositions", "markers", "zoom", "scrollWheelZoom", "position", "osmMap", "i", "marker", "parser", "dom", "text", "icon", "m"]
}
